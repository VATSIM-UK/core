name: Tests

on:
  push:
    branches:
      - '*'
      - '**'
    tags-ignore:
      - v*
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4

      - name: Install PHP dependencies
        uses: ramsey/composer-install@v3

      - name: 'Lint PHP'
        run: composer lint -- --test

  test:
    name: PHP ${{ matrix.php }} / Composer ${{ matrix.composer }}
    needs: lint
    runs-on: ubuntu-latest
    concurrency:
      group: core-test-${{ github.ref }}
      cancel-in-progress: true
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        php: ['8.4']
        composer: ['v2']
        experimental: [false]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:${{ matrix.composer }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Composer Cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-${{ hashFiles('**/composer.lock') }}
            composer-

      - name: Node Cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            public/build
            public/css
            public/js
            public/mix-manifest.json
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ hashFiles('**/package-lock.json') }}
            npm-

      - name: Create Databases
        run: |
          sudo systemctl start mysql.service
          mysql -e 'CREATE DATABASE IF NOT EXISTS core;' -h127.0.0.1 -uroot -proot
          mysql -e 'CREATE DATABASE IF NOT EXISTS core_testing;' -h127.0.0.1 -uroot -proot
          mysql -e 'CREATE DATABASE IF NOT EXISTS cts;' -h127.0.0.1 -uroot -proot

      - name: Composer Authentication
        run: composer config -g github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}

      - name: Install Composer Dependencies
        run: composer install --no-interaction

      - name: Install assets
        run: npm ci

      - name: Compile assets
        run: npm run build

      - name: Create Environment File
        run: mv .env.ci .env

      - name: Publish Telescope
        run: php artisan telescope:publish

      - name: Migrate & Seed Database
        run: php artisan migrate && php artisan cts:migrate:fresh

      - name: Cache Routes
        run: php artisan route:cache

      - name: Cache Config
        run: php artisan config:cache

      - name: Serve Application
        run: php artisan serve -q &

      - name: Execute PHPUnit Tests
        run: vendor/bin/phpunit

  trigger-deploy:
    name: Trigger Deploy
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger deploy workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PAT }}
          event-type: deploy-trigger
